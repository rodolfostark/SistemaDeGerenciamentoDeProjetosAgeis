{"ast":null,"code":"import _objectWithoutProperties from \"/home/gilvandro/Downloads/Projeto-PDSoft/imanager/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"/home/gilvandro/Downloads/Projeto-PDSoft/imanager/src/App.js\";\nimport React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { BrowserRouter as Router, Route, withRouter } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\nimport SignIn from './containers/SignIn';\nimport Home from './containers/Home';\nimport Project from './containers/Project';\nimport store from 'store';\nimport './App.css';\nconst history = createBrowserHistory();\nconst AppComponent = withRouter(SignIn);\n/*\nNesse arquivo temos as configurações de rota usando react-router\ncom ele controlamos apenas pessoas logadas para ver as páginas\ne associamos a cada url do app um component Container que se refere\na página no geral\n\nhistory - é usado porque o html5 com essa api do history nos permite\nmudar a url da pãgina e navegar sem fazer refresh, com ele temos o rastreio complete\nde todas as mudanças de rotas\n*/\n\nfunction RouterComponent() {\n  return React.createElement(Router, {\n    history: history,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: {\n      width: '100%'\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, React.createElement(Route, {\n    path: \"/\",\n    exact: true,\n    component: AppComponent,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }), React.createElement(Route, {\n    history: history,\n    path: \"/home\",\n    component: Home,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }), React.createElement(Route, {\n    history: history,\n    path: \"/project/:id\",\n    component: Project,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  })));\n}\n\nconst PrivateRoute = (_ref) => {\n  let Component = _ref.component,\n      history = _ref.history,\n      rest = _objectWithoutProperties(_ref, [\"component\", \"history\"]);\n\n  return React.createElement(Route, Object.assign({}, rest, {\n    render: props => {\n      return React.createElement(Component, Object.assign({}, props, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 42\n        },\n        __self: this\n      }));\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }));\n};\n\nexport default RouterComponent;","map":{"version":3,"sources":["/home/gilvandro/Downloads/Projeto-PDSoft/imanager/src/App.js"],"names":["React","createBrowserHistory","BrowserRouter","Router","Route","withRouter","Redirect","SignIn","Home","Project","store","history","AppComponent","RouterComponent","width","PrivateRoute","Component","component","rest","props"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,oBAAT,QAAqC,SAArC;AACA,SAASC,aAAa,IAAIC,MAA1B,EAAkCC,KAAlC,EAAyCC,UAAzC,QAA2D,kBAA3D;AACA,SAASC,QAAT,QAAyB,cAAzB;AAEA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,OAAP,MAAoB,sBAApB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAO,WAAP;AAEA,MAAMC,OAAO,GAAIV,oBAAoB,EAArC;AAEA,MAAMW,YAAY,GAAGP,UAAU,CAACE,MAAD,CAA/B;AAGA;;;;;;;;;;;AAWA,SAASM,eAAT,GAA4B;AAC1B,SACE,oBAAC,MAAD;AAAQ,IAAA,OAAO,EAAEF,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,KAAK,EAAE;AAAEG,MAAAA,KAAK,EAAE;AAAT,KAAZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,KAAD;AAAO,IAAA,IAAI,EAAC,GAAZ;AAAgB,IAAA,KAAK,MAArB;AAAsB,IAAA,SAAS,EAAEF,YAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAED,OAAhB;AAAyB,IAAA,IAAI,EAAC,OAA9B;AAAsC,IAAA,SAAS,EAAEH,IAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAGE,oBAAC,KAAD;AAAO,IAAA,OAAO,EAAEG,OAAhB;AAAyB,IAAA,IAAI,EAAC,cAA9B;AAA6C,IAAA,SAAS,EAAEF,OAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHF,CADF,CADF;AASD;;AAED,MAAMM,YAAY,GAAG;AAAA,MAAcC,SAAd,QAAGC,SAAH;AAAA,MAAyBN,OAAzB,QAAyBA,OAAzB;AAAA,MAAqCO,IAArC;;AAAA,SACnB,oBAAC,KAAD,oBAAWA,IAAX;AAAiB,IAAA,MAAM,EAAGC,KAAD,IAAW;AAClC,aAAO,oBAAC,SAAD,oBAAeA,KAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAAP;AACA,KAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADmB;AAAA,CAArB;;AAMA,eAAeN,eAAf","sourcesContent":["import React from 'react';\nimport { createBrowserHistory } from 'history';\nimport { BrowserRouter as Router, Route, withRouter } from \"react-router-dom\";\nimport { Redirect } from 'react-router';\n\nimport SignIn from './containers/SignIn';\nimport Home from './containers/Home';\nimport Project from './containers/Project';\nimport store from 'store';\nimport './App.css';\n\nconst history =  createBrowserHistory();\n\nconst AppComponent = withRouter(SignIn);\n\n\n/*\nNesse arquivo temos as configurações de rota usando react-router\ncom ele controlamos apenas pessoas logadas para ver as páginas\ne associamos a cada url do app um component Container que se refere\na página no geral\n\nhistory - é usado porque o html5 com essa api do history nos permite\nmudar a url da pãgina e navegar sem fazer refresh, com ele temos o rastreio complete\nde todas as mudanças de rotas\n*/\n\nfunction RouterComponent () {\n  return(\n    <Router history={history}>\n      <div style={{ width: '100%' }}>\n        <Route path=\"/\" exact component={AppComponent} />\n        <Route history={history} path=\"/home\" component={Home} />\n        <Route history={history} path=\"/project/:id\" component={Project} />\n      </div>\n    </Router>\n  );\n}\n\nconst PrivateRoute = ({ component: Component, history, ...rest }) => (\n  <Route {...rest} render={(props) => {\n    return <Component {...props} />\n   }} />\n);\n\nexport default RouterComponent;\n"]},"metadata":{},"sourceType":"module"}