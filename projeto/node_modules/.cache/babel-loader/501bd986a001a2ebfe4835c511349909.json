{"ast":null,"code":"import _defineProperty from \"/home/gilvandro/Downloads/Projeto-PDSoft/imanager/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gilvandro/Downloads/Projeto-PDSoft/imanager/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gilvandro/Downloads/Projeto-PDSoft/imanager/src/containers/SignIn.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\nimport store from 'store';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n/*\nSimulando request para o servidor\nessa lógica vai par ao backend quando  tiramos daqui\naqui temos qeu usar axios e fazer request para a url\nda api\n*/\n\nconst fakeAPI = (username, password) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (username === 'gilvandro' && password === '123' || username === 'admin' && password === '123') {\n        resolve({\n          status: 200,\n          messge: 'ok'\n        });\n      } else {\n        reject({\n          status: 400,\n          message: 'invalid'\n        });\n      }\n    }, 500);\n  });\n};\n/*\n component burro para mostrar link\n*/\n\n\nfunction Copyright() {\n  return React.createElement(Typography, {\n    variant: \"body2\",\n    color: \"textSecondary\",\n    align: \"center\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38\n    },\n    __self: this\n  }, 'Copyright © ', React.createElement(Link, {\n    color: \"inherit\",\n    href: \"https://material-ui.com/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40\n    },\n    __self: this\n  }, \"Your Website\"), ' ', new Date().getFullYear(), '.');\n}\n/*\n configurando estilos do material design\n*/\n\n\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white\n    }\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center'\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main\n  },\n  form: {\n    width: '100%',\n    // Fix IE 11 issue.\n    marginTop: theme.spacing(1)\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2)\n  }\n}));\n/*\n  componente que representa toda pagina de login\n*/\n\nexport default function SignIn(props) {\n  const classes = useStyles(); // estado inicial do component\n\n  /*\n    values é o nosos estado inicial do formulario\n    usando essa sintaxe de react-hooks é equivalente a usar\n    a sintaxe de classes com um thi.state = {valores}\n  */\n\n  const _useState = useState({\n    username: '',\n    password: '',\n    error: ''\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        values = _useState2[0],\n        setValues = _useState2[1];\n  /* \n    setValues \n    atualiza nosso estado inicial\n    valores aqui são vindo do form como username e password\n  */\n\n  /*\n    atualiza dinamicamente o campo no estado\n    exempl: fieldName = username e no event vem o valor atual do input\n  */\n\n\n  const handleChange = fieldName => event => {\n    setValues(_objectSpread({}, values, {\n      [fieldName]: event.target.value\n    }));\n  };\n  /*\n    é executada quando o form é preenchido e alguém clica para fazer submit enviar \n  */\n\n\n  const onSubmit = event => {\n    /* \n      faz uma validação basica\n    */\n    event.preventDefault();\n\n    if (!values.password || !values.username) {\n      // TODO  add YUP validation\n      setValues({\n        error: 'All fields are required'\n      });\n    } else {\n      // 1. make request to api to get credentials and token\n      // 2. store token\n      // 3. redirect\n\n      /* \n       aqui demos usar axios para fazer request e pegar credenciais\n       para poder gerar token e dar o usuário acesso para fazer requests na api\n       e listar o que quiser ou enviar algo\n      */\n      // fakeAPI(values.username, values.password).then(() => {\n      // gera um token fake e armazena no localStorage\n      store.set('logged-token', \"token-\".concat(Math.floor(Math.random() * 1000))); // pega o username e guarda no localSotarge pra usar em algum lugar\n\n      store.set('logged-user', values.username);\n      props.history.push('/home'); //}).catch(() => {\n      // caso tenha erros então atualize o state com erros para exibir na pagina\n      //setValues({ error: 'Invalid credentials' });\n      //});\n    }\n  }; // TODO user formik\n\n  /* \n    usamos material design com componentes prontos de formulário\n    criamos o inputs e exibimos\n    cada input quando muda ele atualia o state\n    com valores de password e username\n    quando alguem clica no button o form é enviado via fução de submit\n  */\n\n\n  return React.createElement(Container, {\n    component: \"main\",\n    maxWidth: \"xs\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151\n    },\n    __self: this\n  }, React.createElement(CssBaseline, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 152\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 153\n    },\n    __self: this\n  }, React.createElement(Avatar, {\n    className: classes.avatar,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 154\n    },\n    __self: this\n  }, React.createElement(LockOutlinedIcon, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 155\n    },\n    __self: this\n  })), React.createElement(\"p\", {\n    className: \"error\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 157\n    },\n    __self: this\n  }, values.error), React.createElement(Typography, {\n    component: \"h1\",\n    variant: \"h5\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 158\n    },\n    __self: this\n  }, \"Sign in\"), React.createElement(\"form\", {\n    className: classes.form,\n    noValidate: true,\n    onSubmit: onSubmit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 161\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    id: \"email\",\n    label: \"Username\",\n    name: \"username\",\n    autoComplete: \"username\",\n    autoFocus: true,\n    onChange: handleChange('username'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 162\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    variant: \"outlined\",\n    margin: \"normal\",\n    required: true,\n    fullWidth: true,\n    name: \"password\",\n    label: \"Password\",\n    type: \"password\",\n    id: \"password\",\n    autoComplete: \"current-password\",\n    onChange: handleChange('password'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 174\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    fullWidth: true,\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.submit,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 186\n    },\n    __self: this\n  }, \"Sign In\"))), React.createElement(Box, {\n    mt: 8,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 197\n    },\n    __self: this\n  }, React.createElement(Copyright, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 198\n    },\n    __self: this\n  })));\n}","map":{"version":3,"sources":["/home/gilvandro/Downloads/Projeto-PDSoft/imanager/src/containers/SignIn.js"],"names":["React","useState","store","Avatar","Button","CssBaseline","TextField","Link","Box","LockOutlinedIcon","Typography","makeStyles","Container","fakeAPI","username","password","Promise","resolve","reject","setTimeout","status","messge","message","Copyright","Date","getFullYear","useStyles","theme","body","backgroundColor","palette","common","white","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","secondary","main","form","width","submit","SignIn","props","classes","error","values","setValues","handleChange","fieldName","event","target","value","onSubmit","preventDefault","set","Math","floor","random","history","push"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport store from 'store';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from '@material-ui/core/Button';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport TextField from '@material-ui/core/TextField';\nimport Link from '@material-ui/core/Link';\nimport Box from '@material-ui/core/Box';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport Typography from '@material-ui/core/Typography';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Container from '@material-ui/core/Container';\n\n/*\nSimulando request para o servidor\nessa lógica vai par ao backend quando  tiramos daqui\naqui temos qeu usar axios e fazer request para a url\nda api\n*/\nconst fakeAPI = (username, password) => {\n  return new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (username === 'gilvandro' && password === '123'\n      || username === 'admin' && password === '123') {\n        resolve({ status: 200, messge: 'ok' });\n      } else {\n        reject({ status: 400, message: 'invalid' });\n      }\n    }, 500);\n  });\n}\n\n/*\n component burro para mostrar link\n*/\nfunction Copyright() {\n  return (\n    <Typography variant=\"body2\" color=\"textSecondary\" align=\"center\">\n      {'Copyright © '}\n      <Link color=\"inherit\" href=\"https://material-ui.com/\">\n        Your Website\n      </Link>{' '}\n      {new Date().getFullYear()}\n      {'.'}\n    </Typography>\n  );\n}\n/*\n configurando estilos do material design\n*/\nconst useStyles = makeStyles(theme => ({\n  '@global': {\n    body: {\n      backgroundColor: theme.palette.common.white,\n    },\n  },\n  paper: {\n    marginTop: theme.spacing(8),\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: '100%', // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n/*\n  componente que representa toda pagina de login\n*/\nexport default function SignIn(props) {\n  const classes = useStyles();\n  // estado inicial do component\n  /*\n    values é o nosos estado inicial do formulario\n    usando essa sintaxe de react-hooks é equivalente a usar\n    a sintaxe de classes com um thi.state = {valores}\n  */\n  const [values, setValues] = useState({\n    username: '',\n    password: '',\n    error: '',\n  });\n  /* \n    setValues \n    atualiza nosso estado inicial\n    valores aqui são vindo do form como username e password\n  */\n\n  /*\n    atualiza dinamicamente o campo no estado\n    exempl: fieldName = username e no event vem o valor atual do input\n  */\n  const handleChange = (fieldName) => (event) => {\n    setValues({\n      ...values,\n      [fieldName]: event.target.value,\n    });\n  };\n\n  /*\n    é executada quando o form é preenchido e alguém clica para fazer submit enviar \n  */\n  const onSubmit = (event) => {\n    /* \n      faz uma validação basica\n    */\n    event.preventDefault();\n    if (!values.password || !values.username) {\n      // TODO  add YUP validation\n      setValues({ error: 'All fields are required' });\n    } else {\n      // 1. make request to api to get credentials and token\n      // 2. store token\n      // 3. redirect\n      /* \n       aqui demos usar axios para fazer request e pegar credenciais\n       para poder gerar token e dar o usuário acesso para fazer requests na api\n       e listar o que quiser ou enviar algo\n      */\n      // fakeAPI(values.username, values.password).then(() => {\n        // gera um token fake e armazena no localStorage\n        store.set('logged-token', `token-${Math.floor(Math.random() * 1000)}`);\n        // pega o username e guarda no localSotarge pra usar em algum lugar\n        store.set('logged-user', values.username);\n        props.history.push('/home');\n      //}).catch(() => {\n        // caso tenha erros então atualize o state com erros para exibir na pagina\n        //setValues({ error: 'Invalid credentials' });\n      //});\n    }\n  };\n\n  // TODO user formik\n  /* \n    usamos material design com componentes prontos de formulário\n    criamos o inputs e exibimos\n    cada input quando muda ele atualia o state\n    com valores de password e username\n    quando alguem clica no button o form é enviado via fução de submit\n  */ \n  return (\n    <Container component=\"main\" maxWidth=\"xs\">\n      <CssBaseline />\n      <div className={classes.paper}>\n        <Avatar className={classes.avatar}>\n          <LockOutlinedIcon />\n        </Avatar>\n        <p className=\"error\">{values.error}</p>\n        <Typography component=\"h1\" variant=\"h5\">\n          Sign in\n        </Typography>\n        <form className={classes.form} noValidate onSubmit={onSubmit}>\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            id=\"email\"\n            label=\"Username\"\n            name=\"username\"\n            autoComplete=\"username\"\n            autoFocus\n            onChange={handleChange('username')}\n          />\n          <TextField\n            variant=\"outlined\"\n            margin=\"normal\"\n            required\n            fullWidth\n            name=\"password\"\n            label=\"Password\"\n            type=\"password\"\n            id=\"password\"\n            autoComplete=\"current-password\"\n            onChange={handleChange('password')}\n          />\n          <Button\n            type=\"submit\"\n            fullWidth\n            variant=\"contained\"\n            color=\"primary\"\n            className={classes.submit}\n          >\n            Sign In\n          </Button>\n        </form>\n      </div>\n      <Box mt={8}>\n        <Copyright />\n      </Box>\n    </Container>\n  );\n}\n"]},"metadata":{},"sourceType":"module"}