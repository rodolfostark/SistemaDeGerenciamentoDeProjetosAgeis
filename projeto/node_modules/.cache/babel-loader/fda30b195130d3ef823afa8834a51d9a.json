{"ast":null,"code":"import _defineProperty from \"/home/gilvandro/Downloads/SistemaDeGerenciamentoDeProjetosAgeis/projeto/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"/home/gilvandro/Downloads/SistemaDeGerenciamentoDeProjetosAgeis/projeto/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/gilvandro/Downloads/SistemaDeGerenciamentoDeProjetosAgeis/projeto/src/containers/Project.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(source, true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(source).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect, useState } from 'react';\nimport store from 'store';\nimport Header from '../components/Header';\nimport TaskList from '../components/TaskList';\nimport { useParams } from \"react-router-dom\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport db from '../lib/db';\n/* \nconfigurações de estilos do material ui\n*/\n\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1)\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1)\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  input: {\n    display: 'none'\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200\n  }\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: \"\".concat(top, \"%\"),\n    left: \"\".concat(left, \"%\"),\n    transform: \"translate(-\".concat(top, \"%, -\").concat(left, \"%)\")\n  };\n}\n/**\n Esse são objetos fake simulando um dado que vem direto do banco\n Quando fizermos a request para listar os tasks do porjeto iremos \n receber um json vindo da API com um formato similar\n*/\n\n\nconst projectsFake = {\n  1: {\n    tasks: [{\n      id: Math.floor(Math.random() * 10000),\n      title: 'task 1',\n      assigned: ['gilvandro'],\n      description: 'lorem ipsum',\n      dueDate: '02/10/2019'\n    }, {\n      id: Math.floor(Math.random() * 10000),\n      title: 'task 2',\n      assigned: ['gilvandro'],\n      description: 'lorem ipsum',\n      dueDate: '02/11/2019'\n    }, {\n      id: Math.floor(Math.random() * 10000),\n      title: 'task 3',\n      assigned: ['admin'],\n      description: 'lorem ipsum',\n      dueDate: '10/10/2019'\n    }],\n    name: 'Ifood App',\n    description: 'simple app',\n    contributors: ['gilvandro', '4235', '454'],\n    managers: ['admin']\n  },\n  2: {\n    tasks: [{\n      id: Math.floor(Math.random() * 10000),\n      title: 'task 5',\n      description: 'lorem ipsum',\n      assigned: ['4235']\n    }, {\n      id: Math.floor(Math.random() * 10000),\n      title: 'task 12',\n      description: 'lorem ipsum',\n      assigned: ['4235']\n    }, {\n      id: Math.floor(Math.random() * 10000),\n      title: 'task 45',\n      description: 'lorem ipsum',\n      assigned: ['356']\n    }],\n    name: 'Desktop App',\n    contributors: ['565', '8989', '44'],\n    managers: ['356']\n  },\n  3: {\n    tasks: [],\n    name: 'Web site',\n    contributors: ['8989', '44'],\n    managers: ['admin']\n  }\n};\n/*\n  componente que representa toda pagina de login\n*/\n\nfunction Project(props) {\n  /* \n   project é o projeto atual tasks é o array de tasks que preciso listar no render abaixo\n   setProject método seter para taulizar as tasks\n  */\n  const _useState = useState({\n    tasks: []\n  }),\n        _useState2 = _slicedToArray(_useState, 2),\n        project = _useState2[0],\n        setProject = _useState2[1];\n\n  const _useState3 = useState({\n    tasks: []\n  }),\n        _useState4 = _slicedToArray(_useState3, 2),\n        projectOld = _useState4[0],\n        setOldProject = _useState4[1]; // id via url do projeto\n\n\n  const _useParams = useParams(),\n        id = _useParams.id;\n\n  const classes = useStyles(); // Modal\n\n  /* gerencia quando abre e fecha o modal */\n\n  const _React$useState = React.useState(getModalStyle),\n        _React$useState2 = _slicedToArray(_React$useState, 1),\n        modalStyle = _React$useState2[0];\n\n  const _React$useState3 = React.useState(false),\n        _React$useState4 = _slicedToArray(_React$useState3, 2),\n        open = _React$useState4[0],\n        setOpen = _React$useState4[1]; // abre modal\n\n\n  const handleOpen = () => {\n    setOpen(true);\n  }; // fecha modal\n\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n  /*\n    uma função de react-hooks\n    que vai executar no final que a pãgina é carregada\n    aqui devemos usar axios para fazer request\n    no momemento estamos  usando dados fake estaticos\n  */\n\n\n  useEffect(() => {\n    // Check if the user logged is manager to show all tasks\n    const me = store.get('logged-user'); // acessa as tasks do projeto que etamos abrindo\n    // storage a lib qeu acessa localStorage\n    // id vem da url da task atual\n\n    const currentTasks = store.get('tasks') && store.get('tasks')[id] ? store.get('tasks')[id] : projectsFake[id];\n    /* \n      como não temos API estamos fazendo no frontend uma filtragem caso o user seja admin ele\n      pode ver todos\n      caso não seja admi ele pode ver apenas o projeto onde ele é contribuidor\n       essa lógica pode ser feita no backend o cara poe fazer um query,\n      podemos passar o username do user logado e no backend fica essa lógica\n     mas para facilitar no frontend podemos fazer já que é um protótipo\n    */\n\n    if (me !== 'admin') {\n      const filteredData = currentTasks.tasks.filter(p => {\n        return p.assigned.includes(me);\n      });\n      setProject({\n        tasks: filteredData\n      });\n      setOldProject({\n        tasks: filteredData\n      });\n    } else {\n      setProject(currentTasks);\n      setOldProject(currentTasks);\n    }\n  }, []);\n  /* \n    redirect para login e apaga credenciais\n  */\n\n  const logout = () => {\n    store.set('logged-token', '');\n    store.get('logged-user', '');\n    props.history.push('/');\n  };\n  /* reseta a filtragem */\n\n\n  const filterByAll = () => {\n    setProject(projectOld);\n  };\n  /* fitlra e atualiza o estado para listar apenas minhas tasks */\n\n\n  const filterByMe = () => {\n    // NOTE: Admin filtering data\n    const me = store.get('logged-user');\n    const filteredData = project.tasks.filter(p => {\n      return p.assigned.includes(me);\n    });\n    setProject({\n      tasks: filteredData\n    });\n  };\n  /* \n    gerencia o estado do fomrulário que adiciona task\n  */\n\n\n  const _useState5 = useState({\n    id: Math.floor(Math.random() * 10000),\n    title: '',\n    description: '',\n    dueDate: '2019-12-24T10:30'\n  }),\n        _useState6 = _slicedToArray(_useState5, 2),\n        fields = _useState6[0],\n        setField = _useState6[1];\n\n  const handleChange = field => event => {\n    const value = event.target.value;\n    setField(_objectSpread({}, fields, {\n      [field]: value\n    }));\n  };\n  /* \n    adciona e salva nova task\n  */\n\n\n  const addNewTask = event => {\n    event.preventDefault(); // Store it in localStorage\n\n    const currentProject = project;\n    const tasks = [...currentProject.tasks, fields];\n    db.newTaks(id, tasks); // Update the component state and list it\n\n    setProject({\n      tasks\n    }); // reset\n\n    setField({\n      title: '',\n      description: '',\n      dueDate: '2019-12-24T10:30'\n    });\n    handleClose();\n  };\n\n  const me = store.get('logged-user');\n  /* \n    lista as tasks\n    cada botão tem um evento associal de onLick\n    que filtra por todos, filtra por apenas minhas tasks, reset filtragem\n  */\n\n  return React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271\n    },\n    __self: this\n  }, React.createElement(Header, {\n    logout: logout,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 272\n    },\n    __self: this\n  }), React.createElement(\"div\", {\n    className: \"filter-container\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273\n    },\n    __self: this\n  }, me === 'admin' && React.createElement(React.Fragment, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275\n    },\n    __self: this\n  }, React.createElement(Fab, {\n    onClick: filterByMe,\n    variant: \"extended\",\n    \"aria-label\": \"like\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276\n    },\n    __self: this\n  }, \"My tasks\"), React.createElement(Fab, {\n    onClick: filterByAll,\n    variant: \"extended\",\n    \"aria-label\": \"like\",\n    className: classes.fab,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 279\n    },\n    __self: this\n  }, \"All tasks\"), React.createElement(Button, {\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 282\n    },\n    __self: this\n  }, \"Add Task\"))), React.createElement(Modal, {\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    open: open,\n    onClose: handleClose,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 290\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296\n    },\n    __self: this\n  }, React.createElement(Typography, {\n    variant: \"h5\",\n    component: \"h2\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 297\n    },\n    __self: this\n  }, \"New Task\"), React.createElement(\"form\", {\n    className: classes.container,\n    noValidate: true,\n    autoComplete: \"off\",\n    onSubmit: addNewTask,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 300\n    },\n    __self: this\n  }, React.createElement(\"div\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 301\n    },\n    __self: this\n  }, React.createElement(TextField, {\n    id: \"outlined-basic\",\n    className: classes.textField,\n    label: \"Title\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    placeholder: \"Title\",\n    onChange: handleChange('title'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 302\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"outlined-basic\",\n    className: classes.textField,\n    label: \"Description\",\n    margin: \"normal\",\n    variant: \"outlined\",\n    placeholder: \"Description\",\n    onChange: handleChange('description'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 311\n    },\n    __self: this\n  }), React.createElement(TextField, {\n    id: \"datetime-local\",\n    label: \"Due Date\",\n    type: \"datetime-local\",\n    defaultValue: \"2017-05-24T10:30\",\n    className: classes.textField,\n    InputLabelProps: {\n      shrink: true\n    },\n    onChange: handleChange('dueDate'),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 320\n    },\n    __self: this\n  }), React.createElement(Button, {\n    type: \"submit\",\n    variant: \"contained\",\n    color: \"primary\",\n    className: classes.button,\n    onClick: handleOpen,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 331\n    },\n    __self: this\n  }, \"Save Task\"))))), React.createElement(TaskList, {\n    tasks: project.tasks,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 340\n    },\n    __self: this\n  }));\n}\n\nexport default Project;","map":{"version":3,"sources":["/home/gilvandro/Downloads/SistemaDeGerenciamentoDeProjetosAgeis/projeto/src/containers/Project.js"],"names":["React","useEffect","useState","store","Header","TaskList","useParams","Fab","AddIcon","EditIcon","FavoriteIcon","NavigationIcon","makeStyles","Button","Modal","TextField","Typography","db","useStyles","theme","fab","margin","spacing","extendedIcon","marginRight","button","input","display","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","textField","marginLeft","rand","Math","round","random","getModalStyle","top","left","transform","projectsFake","tasks","id","floor","title","assigned","description","dueDate","name","contributors","managers","Project","props","project","setProject","projectOld","setOldProject","classes","modalStyle","open","setOpen","handleOpen","handleClose","me","get","currentTasks","filteredData","filter","p","includes","logout","set","history","push","filterByAll","filterByMe","fields","setField","handleChange","field","event","value","target","addNewTask","preventDefault","currentProject","newTaks","container","shrink"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport store from 'store';\nimport Header from '../components/Header';\nimport TaskList from '../components/TaskList';\nimport {\n  useParams,\n} from \"react-router-dom\";\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport NavigationIcon from '@material-ui/icons/Navigation';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Button from '@material-ui/core/Button';\nimport Modal from '@material-ui/core/Modal';\nimport TextField from '@material-ui/core/TextField';\nimport Typography from '@material-ui/core/Typography';\nimport db from '../lib/db';\n\n/* \nconfigurações de estilos do material ui\n*/\nconst useStyles = makeStyles(theme => ({\n  fab: {\n    margin: theme.spacing(1),\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  button: {\n    margin: theme.spacing(1),\n  },\n  input: {\n    display: 'none',\n  },\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n  textField: {\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    width: 200,\n  },\n}));\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n/**\n Esse são objetos fake simulando um dado que vem direto do banco\n Quando fizermos a request para listar os tasks do porjeto iremos \n receber um json vindo da API com um formato similar\n*/\nconst projectsFake = {\n  1: {\n    tasks: [\n      {\n        id: Math.floor(Math.random() * 10000),\n        title: 'task 1',\n        assigned: ['gilvandro'],\n        description: 'lorem ipsum',\n        dueDate: '02/10/2019',\n      },\n      {\n        id: Math.floor(Math.random() * 10000),\n        title: 'task 2',\n        assigned: ['gilvandro'],\n        description: 'lorem ipsum',\n        dueDate: '02/11/2019',\n      },\n      {\n        id: Math.floor(Math.random() * 10000),\n        title: 'task 3',\n        assigned: ['admin'],\n        description: 'lorem ipsum',\n        dueDate: '10/10/2019',\n      },\n    ],\n    name: 'Ifood App',\n    description: 'simple app',\n    contributors: ['gilvandro', '4235', '454'],\n    managers: ['admin'],\n  },\n  2: {\n    tasks: [\n      {\n        id: Math.floor(Math.random() * 10000),\n        title: 'task 5',\n        description: 'lorem ipsum',\n        assigned: ['4235'],\n      },\n      {\n        id: Math.floor(Math.random() * 10000),\n        title: 'task 12',\n        description: 'lorem ipsum',\n        assigned: ['4235'],\n      },\n      {\n        id: Math.floor(Math.random() * 10000),\n        title: 'task 45',\n        description: 'lorem ipsum',\n        assigned: ['356'],\n      },\n    ],\n    name: 'Desktop App',\n    contributors: ['565', '8989', '44'],\n    managers: ['356'],\n  },\n  3: {\n    tasks: [],\n    name: 'Web site',\n    contributors: ['8989', '44'],\n    managers: ['admin'],\n  }\n};\n\n/*\n  componente que representa toda pagina de login\n*/\nfunction Project(props) {\n  /* \n   project é o projeto atual tasks é o array de tasks que preciso listar no render abaixo\n   setProject método seter para taulizar as tasks\n  */\n  const [project, setProject] = useState({ tasks: [] });\n  const [projectOld, setOldProject] = useState({ tasks: [] });\n  // id via url do projeto\n  const { id }  = useParams();\n  const classes = useStyles();\n\n  // Modal\n  /* gerencia quando abre e fecha o modal */ \n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n\n  // abre modal\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  // fecha modal\n  const handleClose = () => {\n    setOpen(false);\n  };\n  \n  /*\n    uma função de react-hooks\n    que vai executar no final que a pãgina é carregada\n    aqui devemos usar axios para fazer request\n    no momemento estamos  usando dados fake estaticos\n  */\n  useEffect(() => {\n    // Check if the user logged is manager to show all tasks\n    const me = store.get('logged-user');\n\n    // acessa as tasks do projeto que etamos abrindo\n    // storage a lib qeu acessa localStorage\n    // id vem da url da task atual\n    const currentTasks = store.get('tasks') && store.get('tasks')[id]\n      ? store.get('tasks')[id]\n      : projectsFake[id];\n\n    /* \n      como não temos API estamos fazendo no frontend uma filtragem caso o user seja admin ele\n      pode ver todos\n      caso não seja admi ele pode ver apenas o projeto onde ele é contribuidor\n\n      essa lógica pode ser feita no backend o cara poe fazer um query,\n      podemos passar o username do user logado e no backend fica essa lógica\n     mas para facilitar no frontend podemos fazer já que é um protótipo\n    */\n    if (me !== 'admin') {\n      const filteredData = currentTasks.tasks.filter(p => {\n        return p.assigned.includes(me);\n      });\n      setProject({ tasks: filteredData });\n      setOldProject({ tasks: filteredData });\n    } else {\n      setProject(currentTasks);\n      setOldProject(currentTasks);\n    }\n  }, []);\n\n  /* \n    redirect para login e apaga credenciais\n  */ \n  const logout = () => {\n    store.set('logged-token', '');\n    store.get('logged-user', '');\n    props.history.push('/');\n  };\n\n  /* reseta a filtragem */\n  const filterByAll = () => {\n    setProject(projectOld);\n  };\n\n  /* fitlra e atualiza o estado para listar apenas minhas tasks */\n  const filterByMe = () => {\n    // NOTE: Admin filtering data\n    const me = store.get('logged-user');\n    const filteredData = project.tasks.filter(p => {\n      return p.assigned.includes(me)\n    });\n    setProject({ tasks: filteredData });\n  };\n\n  /* \n    gerencia o estado do fomrulário que adiciona task\n  */\n  const [fields, setField] = useState({\n    id: Math.floor(Math.random() * 10000),\n    title: '',\n    description: '',\n    dueDate: '2019-12-24T10:30'\n  });\n  const handleChange = (field) => (event) => {\n    const value = event.target.value;\n    setField({\n      ...fields,\n      [field]: value,\n    });\n  };\n\n  /* \n    adciona e salva nova task\n  */\n  const addNewTask = (event) => {\n    event.preventDefault();\n    // Store it in localStorage\n    const currentProject = project;\n    const tasks = [...currentProject.tasks, fields];\n    db.newTaks(id, tasks);\n\n    // Update the component state and list it\n    setProject({\n      tasks,\n    });\n\n    // reset\n    setField({ title: '', description: '', dueDate: '2019-12-24T10:30' });\n    handleClose();\n  };\n\n  const me = store.get('logged-user');\n\n  /* \n    lista as tasks\n    cada botão tem um evento associal de onLick\n    que filtra por todos, filtra por apenas minhas tasks, reset filtragem\n  */\n  return (\n    <div>\n      <Header logout={logout} />\n      <div className=\"filter-container\">\n        {me === 'admin' && (\n          <React.Fragment>\n            <Fab onClick={filterByMe} variant=\"extended\" aria-label=\"like\" className={classes.fab}>\n              My tasks\n            </Fab>\n            <Fab onClick={filterByAll} variant=\"extended\" aria-label=\"like\" className={classes.fab}>\n              All tasks\n            </Fab>\n            <Button variant=\"contained\" color=\"primary\" className={classes.button}\n              onClick={handleOpen}\n            >\n              Add Task\n            </Button>\n          </React.Fragment>\n        )}\n      </div>\n      <Modal\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n        open={open}\n        onClose={handleClose}\n      >\n        <div style={modalStyle} className={classes.paper}>\n          <Typography variant=\"h5\" component=\"h2\">\n            New Task\n          </Typography>\n          <form className={classes.container} noValidate autoComplete=\"off\" onSubmit={addNewTask}>\n            <div>\n              <TextField\n                id=\"outlined-basic\"\n                className={classes.textField}\n                label=\"Title\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"Title\"\n                onChange={handleChange('title')}\n              />\n              <TextField\n                id=\"outlined-basic\"\n                className={classes.textField}\n                label=\"Description\"\n                margin=\"normal\"\n                variant=\"outlined\"\n                placeholder=\"Description\"\n                onChange={handleChange('description')}\n              />\n              <TextField\n                id=\"datetime-local\"\n                label=\"Due Date\"\n                type=\"datetime-local\"\n                defaultValue=\"2017-05-24T10:30\"\n                className={classes.textField}\n                InputLabelProps={{\n                  shrink: true,\n                }}\n                onChange={handleChange('dueDate')}\n              />\n              <Button type=\"submit\" variant=\"contained\" color=\"primary\" className={classes.button}\n                onClick={handleOpen}\n              >\n                Save Task\n              </Button>\n            </div>\n          </form>\n        </div>\n      </Modal>\n      <TaskList tasks={project.tasks} />\n    </div>\n  );\n}\n\nexport default Project;"]},"metadata":{},"sourceType":"module"}